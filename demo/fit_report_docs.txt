```README for parsing fit_report.txt files generated by optimize_model() method of Model objects```

:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
THIS EXAMPLE IS FOR A PROACTIVE MODEL FIT WITH BOUNDARY HEIGHT FREE TO VARY
ACROSS LEVELS OF CONDITION "PGo: (0, 20, 60, 40, 80, 100)
:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

* This section contains all the details of the model fits to the
flat data (collapsing across conditions), which is performed for
the purpose of optimizing parameters in the model that will be held
constant in the main fits.

* Thus, the results of this phase of the fits
are not of primary interest when comparing alternative models
in which different parameters are allowed to vary across different conditions
in the data

      ========================================
      <fit_on> [AVERAGE, SUBJECTS, BOOTSTRAP] FLAT
      MODEL: <kind> (xradd, xpro, xirace, radd..etc) (<dynamic> (hyp, exp))
      <depends_on> (e.g., Cond, pGo) DEPENDS ON (depends_on keys)
      ----------------------------------------
      wts = array of weights used in flat fits (no conditional parameters)
      yhat = array of best fit model predictions
      y = array of data entered into the cost fx
      ----------------------------------------
      [[Fit Statistics]]
          # function evals   =      nfev (float)
          # data points      =      ndata (float)
          # variables        =      nvar (float)
          chi-square         =      X2 (float)
          reduced chi-square =      rX2 (float)
      [[Variables]]
          a:    optimized boundary height(float) (init value (float))
          xb:   optimized dynamic bias (float)   (init value (float))
          tr:   optimized onset-time (float)     (init value (float))
          v:    optimized drift-rate (float)     (init value (float))

      AIC:  (float)
      BIC:  (float)
      chi:  (float)
      rchi: (float)
      Converged: BOOL
      ========================================


* results of basinhopping routine used to pre-tune conditional parameters
before initializing the full model submitted to the final simplex optimization

      ----------------------------------------
      BASINHOPPING RESULTS
      basin = array of pretuned values (1/level of condition) of parameters in depends_on keys
      (i.e. parameters allowed to vary across condition)
      ----------------------------------------

* This section contains all the details of the model fits to
all conditions of interest in the data.

      ========================================
      <fit_on> [AVERAGE, SUBJECTS, BOOTSTRAP] FULL
      MODEL: <kind> (xradd, xpro, xirace, radd..etc) (<dynamic> (hyp, exp))
      <depends_on> (e.g., Cond, pGo) DEPENDS ON (depends_on keys)
      ----------------------------------------
      wts = array of weights used in FULL fits
      yhat = array of best fit model predictions
      y = array of data entered into the cost fx
      ----------------------------------------
      [[Fit Statistics]]
          # function evals   =      nfev (float)
          # data points      =      ndata (float)
          # variables        =      nvar (float)
          chi-square         =      X2 (float)
          reduced chi-square =      rX2 (float)
      [[Variables]]
          a_0:     optimized boundary height for P(Go=0)    (init value)
          a_20:    optimized boundary height for P(Go=20)   (init value)
          a_40:    optimized boundary height for P(Go=40)   (init value)
          a_60:    optimized boundary height for P(Go=60)   (init value)
          a_80:    optimized boundary height for P(Go=80)   (init value)
          a_100:   optimized boundary height for P(Go=100)  (init value)
          xb:      optimized dynamic bias (float)           (init value)
          tr:      optimized onset-time (float)             (init value)
          v:       optimized drift-rate (float)             (init value)

      AIC:  (float)
      BIC:  (float)
      chi:  (float)
      rchi: (float)
      Converged: BOOL
      ========================================
